from flask import Flask
from flask_sqlalchemy import SQLAlchemy
from flask_login import LoginManager
import os
import sys
import pickle

PROJECT_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ sys.path
SRC_PATH = os.path.join(PROJECT_ROOT, 'src')
if SRC_PATH not in sys.path:
    sys.path.insert(0, SRC_PATH)

# –ü—É—Ç—å –∫ –º–æ–¥–µ–ª–∏
MODEL_PATH = os.path.join(SRC_PATH, 'models', 'item_based', 'item_based_cf_model.pkl')

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
with open(MODEL_PATH, 'rb') as f:
    item_cf_model = pickle.load(f)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
db = SQLAlchemy()
login_manager = LoginManager()


def create_app():
    app = Flask(__name__)

    # üîë –ö–ª—é—á –¥–ª—è —Å–µ—Å—Å–∏–π (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π!)
    app.config['SECRET_KEY'] = 'supersecretkey'

    # üì¶ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∞–∑—ã SQLite (–ª–µ–∂–∏—Ç –≤ –ø–∞–ø–∫–µ data)
    app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///../data/users.db'
    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

    # üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã
    db.init_app(app)

    # üîê Flask-Login
    login_manager.login_view = 'main.login'   # –∫—É–¥–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç—å –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö
    login_manager.login_message_category = "warning"  # –∫–∞—Ç–µ–≥–æ—Ä–∏—è flash-—Å–æ–æ–±—â–µ–Ω–∏—è
    login_manager.init_app(app)

    # üìå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è user_loader
    from .models import User

    @login_manager.user_loader
    def load_user(user_id):
        return User.query.get(int(user_id))

    # üîó –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤
    from . import routes
    app.register_blueprint(routes.bp)

    # üõ† –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü, –µ—Å–ª–∏ –±–∞–∑—ã –µ—â—ë –Ω–µ—Ç
    with app.app_context():
        db.create_all()

    return app